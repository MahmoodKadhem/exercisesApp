.form {
  display: flex;
  width: 100%;
  flex-wrap: wrap;


  &__subcontent{
    width: 100%;
  }

  &__groupContainer{
    background-color: var(--color-p-l);
    border: 1rem solid var(--color-p-d);
    border-radius: 2rem;
    padding: 2rem;
    margin-bottom: 5rem;
    width: 90%;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    position: relative;
  }

  &__header{
    position: absolute;
    top: -5rem;
    left: 0;
    background-color: var(--color-p-l);
    border: 1rem solid var(--color-p-d);
    color: var(--color-p-d);
    border-radius: 2rem;
    padding: .5rem;
  }

  &__group {
    width: 50%;
    padding-right: 1rem;
    &:not(:last-child) {
      padding-bottom: 2rem;
    }

    @include respond(tab-port) {
      // width < 900
      width: 100%;
    }
  }

  &__groupQuarted {
    width: 25%;
    padding-right: 1rem;
    &:not(:last-child) {
      padding-bottom: 2rem;
    }

    @include respond(phone) {
      // width < 900
      width: 100%;
    }
  }
  
  &__groupThired {
    width: 33%;
    padding-right: 1rem;
    &:not(:last-child) {
      padding-bottom: 2rem;
    }

    @include respond(tab-land) {
      // width < 900
      width: 100%;
    }

  }

  &__groupSixth {
    width: 66%;
    padding-right: 1rem;
    display: flex;
    flex-wrap: wrap;

    &:not(:last-child) {
      padding-bottom: 2rem;
    }

    @include respond(tab-land) {
      // width < 900
      width: 100%;
    }
  }

  &__groupFlex{
    width: 90%;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
  }

  &__groupFull {
    width: 100%;
    // height: 100%;
    &:not(:last-child) {
      padding-bottom: 2rem;
    }
    & > .form__input{
      width: 95%;
    }

    &--center{
      display: flex;
      flex-direction: row;
      justify-content: space-evenly;
      align-items: center;
    }

    &--row{
      width: 100%;
      display: flex;
      flex-direction: row;
      justify-content: space-between;
    }
  }

  &__input {
    height: 6rem;
    font-size: 1.5rem;
    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: var(--color-white);
    border: none;
    border-bottom: 3px solid transparent;
    width: 90%;
    display: block;
    color: var(--color-g-d-2);
    font-family: inherit;
    transition: all 0.3s;
    &:lang(ar) {
      font-size: 2rem;
      padding: 0.7rem 1.2rem;
    }

    &--text{
      height: 100%;
      max-height: 50rem;
    }

    @include respond(tab-land) {
      // width < 900
      width: 100%;
    }


    &:focus {
      outline: none;
      box-shadow: var(--shadow-dark);
      border-bottom: 3px solid var(--color-p);
    }

    &:focus:invalid {
      border-bottom: 3px solid var(--color-p-d);
    }

    // only works in saffary and chrome
    &::-webkit-input-placeholder {
      color: var(--color-g-d-2);
    }
  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: 0.7rem;
    display: block;
    transition: all 0.3s;
    &:lang(ar) {
      font-size: 2.2rem;
    }
  }

  // :placeholder-shown select the <input> when then input placeholder is showen
  // the first sibling selector is + , the general sibling selector is ~
  // the sibling we want to select should always be after the element
  // this element it the initial state of label befor showen.
  &__input:placeholder-shown + &__label {
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4rem);
  }

  // &__input--date:placeholder-shown + &__label {
  //   opacity: 1;
  //   visibility:visible;
  //   // transform: translateY(-4rem);
  // }

  //////////////////////////////////date group
  // &__date-group{
  //   // display: flex;
  //   // flex-direction: row-reverse;
  //   // justify-content: flex-end;
  //   // align-items: flex-start;
  //   width: 50%;
  //   display: block;
  // }

  // &__date-input{
  //   font-size: 1.5rem;
  //   padding: 1.5rem 2rem;
  //   border-radius: 2px;
  //   background-color: var(--color-white);
  //   border: none;
  //   border-bottom: 3px solid transparent;
  //   width: 60%;
  //   display: inline-block;
  //   color: inherit;
  //   font-family: inherit;
  //   transition: all 0.3s;
  // }

  // &__date-label{
  //   font-size: var(--d-font-size);
  //   font-weight: 700;
  //   width: 30%;
  //   // margin-left: 2rem;
  //   margin-top: 0.7rem;
  //   display: inline-block;
  //   transition: all 0.3s;
  // }

  //////////////////////////////////radio button
  &__radio-group {
    display: inline-block;
    width: 49%;

    @include respond(tab-port) {
      // width < 900
      width: 100%;
      &:not(:last-child) {
        margin-bottom: 1rem;
      }
    }
  }
  &__radio-groupThired {
    display: inline-block;
    width: 33%;

    @include respond(tab-port) {
      // width < 900
      width: 100%;
      &:not(:last-child) {
        margin-bottom: 1rem;
      }
    }
  }

  &__radio-label {
    font-size: var(--d-font-size);
    cursor: pointer;
    position: relative;
    padding-left: 4rem;
  }

  &__radio-input {
    display: none;
  }

  &__radio-button {
    height: 3rem;
    width: 3rem;
    border: 5px solid var(--color-p);
    border-radius: 50%;
    display: inline-block;
    position: absolute;
    top: -4px;
    left: 0;

    &--disabled{
      border: 5px solid var(--color-g-d-3);
    }

    &::after {
      content: "";
      display: block;
      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: var(--color-p);
      opacity: 0;
      transition: opacity 0.2s;
    }
  }

  // as soon as we hit the label element the radio button get checked, and when the radio button is checked we select the adjacent or direct sibling to this button that has the class of radio-label and the after elemet of the child that has class with the name of radio-button. and change it's opacity to 1.
  // if(radio-input is checked) select the adjecent elemet of this elemet with the class of radio-lable -> radio-button -> after
  &__radio-input:checked + &__radio-label &__radio-button::after {
    opacity: 1;
  }
  // the same apply for checked boxes
}
